diff --git a/node_modules/react-native-extended-stylesheet/types/index.d.ts b/node_modules/react-native-extended-stylesheet/types/index.d.ts
index 74d1762..262e39f 100644
--- a/node_modules/react-native-extended-stylesheet/types/index.d.ts
+++ b/node_modules/react-native-extended-stylesheet/types/index.d.ts
@@ -10,27 +10,38 @@
  * Adding key augmention is tracked here: https://github.com/Microsoft/TypeScript/issues/12754
  */
 
-import {StyleSheet} from 'react-native';
+import { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';
 
 export = EStyleSheet;
 
 declare namespace EStyleSheet {
-    type AnyObject = {[key: string]: any};
-    type Event = 'build';
-
-    export function create(styles: AnyObject): AnyObject;
-    export function build(rawGlobalVars?: AnyObject): void;
-    export function value(expr: any, prop?: string): any;
-    export function child(styles: AnyObject, styleName: string, index: number, count: number): AnyObject;
-    export function subscribe(event: Event, listener: () => any): void;
-    export function clearCache(): void;
-
-    // inherited from StyleSheet
-    export const flatten: typeof StyleSheet.flatten;
-    export const setStyleAttributePreprocessor: typeof StyleSheet.setStyleAttributePreprocessor;
-    export const hairlineWidth: typeof StyleSheet.hairlineWidth;
-    export const absoluteFillObject: typeof StyleSheet.absoluteFillObject;
-    export const absoluteFill: typeof StyleSheet.absoluteFill;
-}
+	type AnyObject = { [key: string]: any };
+	type Event = 'build';
+
+	type EViewStyle = { [K in keyof ViewStyle]: ViewStyle[K] extends number ? any : ViewStyle[K] };
+	type ETextStyle = { [K in keyof TextStyle]: TextStyle[K] extends number ? any : TextStyle[K] };
+	type EImageStyle = { [K in keyof ImageStyle]: ImageStyle[K] extends number ? any : ImageStyle[K] };
+	type NamedStyles<T> = { [P in keyof T]: EViewStyle | ETextStyle | EImageStyle };
+
+	/**
+	 * Creates a StyleSheet style reference from the given object.
+	 */
+	export function create<T extends NamedStyles<T> | NamedStyles<any>>(styles: T | NamedStyles<T>): T | any;
+
+	export function build(rawGlobalVars?: AnyObject): void;
 
+	export function value(expr: any, prop?: string): any;
 
+	export function child(styles: AnyObject, styleName: string, index: number, count: number): AnyObject;
+
+	export function subscribe(event: Event, listener: () => any): void;
+
+	export function clearCache(): void;
+
+	// inherited from StyleSheet
+	export const flatten: typeof StyleSheet.flatten;
+	export const setStyleAttributePreprocessor: typeof StyleSheet.setStyleAttributePreprocessor;
+	export const hairlineWidth: typeof StyleSheet.hairlineWidth;
+	export const absoluteFillObject: typeof StyleSheet.absoluteFillObject;
+	export const absoluteFill: typeof StyleSheet.absoluteFill;
+}
